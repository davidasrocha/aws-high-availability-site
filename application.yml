Parameters:

# network
  VPCCidrBlock:
    Type: String

  ProjectName:
    Type: String

  EnvironmentName:
    Type: String

  PublicSubNet1CIDR:
    Type: String

  PublicSubNet2CIDR:
    Type: String

  PrivateSubNet1CIDR:
    Type: String

  PrivateSubNet2CIDR:
    Type: String

# servers
  InstanceType:
    Type: String

  ImageId:
    Type: String

  VolumeSize:
    Type: String

  AutoScalingGroupMinSize:
    Type: String

  AutoScalingGroupMaxSize:
    Type: String

Resources:

# network
  VPCHighAvailabilitySite:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrBlock
      Tags: 
        - Key: ProjectName
          Value: !Sub ${ProjectName}
        - Key: EnvironmentName
          Value: !Sub ${EnvironmentName}

  PrivateSubnet1HighAvailabilitySite:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubNet1CIDR
      VpcId: !Ref VPCHighAvailabilitySite
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags: 
        - Key: ProjectName
          Value: !Sub ${ProjectName}
        - Key: EnvironmentName
          Value: !Sub ${EnvironmentName}

  PrivateSubnet2HighAvailabilitySite:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PrivateSubNet2CIDR
      VpcId: !Ref VPCHighAvailabilitySite
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      Tags: 
        - Key: ProjectName
          Value: !Sub ${ProjectName}
        - Key: EnvironmentName
          Value: !Sub ${EnvironmentName}

  PublicSubnet1HighAvailabilitySite:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubNet1CIDR
      VpcId: !Ref VPCHighAvailabilitySite
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags: 
        - Key: ProjectName
          Value: !Sub ${ProjectName}
        - Key: EnvironmentName
          Value: !Sub ${EnvironmentName}

  PublicSubnet2HighAvailabilitySite:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref PublicSubNet2CIDR
      VpcId: !Ref VPCHighAvailabilitySite
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      Tags: 
        - Key: ProjectName
          Value: !Sub ${ProjectName}
        - Key: EnvironmentName
          Value: !Sub ${EnvironmentName}

  InternetGatewayHighAvailabilitySite:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
        - Key: ProjectName
          Value: !Sub ${ProjectName}
        - Key: EnvironmentName
          Value: !Sub ${EnvironmentName} 

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGatewayHighAvailabilitySite
      VpcId: !Ref VPCHighAvailabilitySite

  NATGateway1EPIHighAvailabilitySite:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    DependsOn: AttachInternetGateway

  NATGateway2EPIHighAvailabilitySite:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    DependsOn: AttachInternetGateway

  NATGateway1HighAvailabilitySite:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref PublicSubnet1HighAvailabilitySite
      AllocationId: !GetAtt NATGateway1EPIHighAvailabilitySite.AllocationId
      Tags: 
        - Key: ProjectName
          Value: !Sub ${ProjectName}
        - Key: EnvironmentName
          Value: !Sub ${EnvironmentName} 

  NATGateway2HighAvailabilitySite:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref PublicSubnet2HighAvailabilitySite
      AllocationId: !GetAtt NATGateway2EPIHighAvailabilitySite.AllocationId
      Tags: 
        - Key: ProjectName
          Value: !Sub ${ProjectName}
        - Key: EnvironmentName
          Value: !Sub ${EnvironmentName} 

  PublicRouteTableHighAvailabilitySite:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCHighAvailabilitySite
      Tags: 
        - Key: ProjectName
          Value: !Sub ${ProjectName}
        - Key: EnvironmentName
          Value: !Sub ${EnvironmentName} 

  PublicRouteHighAvailabilitySite:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTableHighAvailabilitySite
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGatewayHighAvailabilitySite
    DependsOn: AttachInternetGateway

  PublicRouteAssociationSubNet1HighAvailabilitySite:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTableHighAvailabilitySite
      SubnetId: !Ref PublicSubnet1HighAvailabilitySite

  PublicRouteAssociationSubNet2HighAvailabilitySite:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTableHighAvailabilitySite
      SubnetId: !Ref PublicSubnet2HighAvailabilitySite

  PrivateRouteTable1HighAvailabilitySite:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCHighAvailabilitySite
      Tags: 
        - Key: ProjectName
          Value: !Sub ${ProjectName}
        - Key: EnvironmentName
          Value: !Sub ${EnvironmentName} 

  PrivateRouteSubNet1HighAvailabilitySite:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1HighAvailabilitySite
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1HighAvailabilitySite

  PrivateRouteAssociationSubNet1HighAvailabilitySite:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1HighAvailabilitySite
      SubnetId: !Ref PrivateSubnet1HighAvailabilitySite

  PrivateRouteTable2HighAvailabilitySite:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCHighAvailabilitySite
      Tags: 
        - Key: ProjectName
          Value: !Sub ${ProjectName}
        - Key: EnvironmentName
          Value: !Sub ${EnvironmentName} 

  PrivateRouteSubNet2HighAvailabilitySite:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2HighAvailabilitySite
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway2HighAvailabilitySite

  PrivateRouteAssociationSubNet2HighAvailabilitySite:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2HighAvailabilitySite
      SubnetId: !Ref PrivateSubnet2HighAvailabilitySite

# servers

  SecurityGroupHighAvailabilitySite:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Web Application Security Group
      SecurityGroupEgress:
        - IpProtocol: "tcp"
          FromPort: 0
          ToPort: 65535
          CidrIp: "0.0.0.0/0"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
      VpcId: !Ref VPCHighAvailabilitySite

  LaunchConfigurationHighAvailabilitySite:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Sub ${ImageId}
      InstanceType: !Sub ${InstanceType}
      SecurityGroups:
        - Ref: SecurityGroupHighAvailabilitySite
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: !Sub ${VolumeSize}

  AutoScalingGroupHighAvailabilitySite:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: 
        Ref: LaunchConfigurationHighAvailabilitySite
      VPCZoneIdentifier: 
        - !Ref PrivateSubnet1HighAvailabilitySite
        - !Ref PrivateSubnet2HighAvailabilitySite
      MinSize: !Sub ${AutoScalingGroupMinSize}
      MaxSize: !Sub ${AutoScalingGroupMaxSize}
      HealthCheckGracePeriod: 10
      TargetGroupARNs:
        - !Ref WebApplicationTargetGroupHighAvailabilitySite

# load balancer
  LoadBalancerSecurityGroupHighAvailabilitySite:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Load Balancer Application Security Group
      SecurityGroupEgress:
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
      VpcId: !Ref VPCHighAvailabilitySite

  WebApplicationLoadBalancerHighAvailabilitySite:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - !Ref PublicSubnet1HighAvailabilitySite
        - !Ref PublicSubnet2HighAvailabilitySite
      SecurityGroups: 
        - !Ref LoadBalancerSecurityGroupHighAvailabilitySite

  WebApplicationTargetGroupHighAvailabilitySite:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 35
      HealthCheckPath: "/"
      HealthCheckProtocol: "HTTP"
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Port: 80
      Protocol: "HTTP"
      UnhealthyThresholdCount: 5
      VpcId: !Ref VPCHighAvailabilitySite

  LoadBalancerListenerHighAvailabilitySite:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebApplicationTargetGroupHighAvailabilitySite
      LoadBalancerArn: !Ref WebApplicationLoadBalancerHighAvailabilitySite
      Port: 80
      Protocol: "HTTP"

  LoadBalancerListenerRuleHighAvailabilitySite:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref WebApplicationTargetGroupHighAvailabilitySite
      Conditions:
        - Field: path-pattern
          Values: [ "/" ]
      ListenerArn: !Ref LoadBalancerListenerHighAvailabilitySite
      Priority: 1

Outputs:

  WebSiteAddress:
    Description: WebSite public address
    Value: !Join [ "://", [ "http", !GetAtt WebApplicationLoadBalancerHighAvailabilitySite.DNSName ] ]
    Export:
      Name: WebSiteAddressHighAvailabilitySite
